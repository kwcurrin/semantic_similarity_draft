import collections
import random
import sys

def get_query_profiles(profiles,num,size):
	"""This function generates a specified number (num) of query profiles of a specified size.
	The queries will be generated by copying a random set of profiles of the desired number and size from the set of all profiles of the given size in the input profiles dictionary.	
	The queries will be returned as a dictionary of lists."""
	
	# Extract all of the profiles that meet the specified profile size.
	candidate_profiles = {ID: annotations for ID,annotations in profiles.iteritems() if len(annotations) == size}
	# Check to make sure that the number of candidate profiles is greater than or equal to the desired number of queries.
	assert num <= len(candidate_profiles),"The number of specified queries is greater than the total number of profiles of the specified size."
	print len(candidate_profiles)
	# Randomly select the specified number of profile IDs from the candidate profiles.
	query_IDs = random.sample(candidate_profiles.keys(),num)
# Construct a dictionary of the queries using the query IDs.	
	queries = {ID: candidate_profiles[ID] for ID in query_IDs}
	print len(queries)
	for ID in queries.iterkeys():
		print len(queries[ID])
	return queries

if __name__ == "__main__":
	import makeRandomProfiles
	profiles = makeRandomProfiles.make_random_profiles(sys.argv[1],sys.argv[2])
	get_query_profiles(profiles,5,10)